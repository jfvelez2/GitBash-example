Flexbox course: Para ver los cambios que aplico en Visual Studio Code en directo en el navegador:

En Git Bash:
--> cd ~/Desktop/Full-Stack_DEVCAMP/flexbox-course   (fichero base)
--> ls (se muestran todos los archivos)
--> gulp serve (se abre una ventana en el navegador y se evidencian los cambios en los archivos html/css)


¿Cómo CREAR un nuevo directorio/Repositorio en GitHub:

1. --> Desde Git Bash: cd ~/Desktop/CodePy/Checkpoint-4 (carpeta específica del proyecto .../.../.../ algunas veces se dee indicar al comienzo de la líniea el símbolo '$')
       Al iniciar la terminal Git Bash se ve del siguiente modo:
       John Vélez@LAPTOP-LI9N517C MINGW64 ~
       $ cd ~/Desktop/CodePy/Checkpoint-4 (añadimos la localiyacion del fichero para ubicarnos en nuestros ficheros de trabajo)

   --> Desde Visual Studio Code: Abrir la carpeta donde estamos trabajando en nuestro proyecto (p.ej: File > open folder > Checkpoint-4)
       En VSC al ubicar la carpeta del proyecto y abrir el Terminal en GitBash (aparece simplemente como bash) nos ubica en ese fichero:
       En el ejemplo: John Vélez@LAPTOP-LI9N517C MINGW64 ~/Desktop/CodePy/Checkpoint-4 (main)
       Si la terminal no se ha abierto procedemos como sigue: 
       View > Terminal (por defecto aparecera PowerShell, debemos cambiar a Git Bash con el botón "+ ˅")
       Una vez en Git Bash nos ubicará la dirección del fichero de trabajo: John Vélez@LAPTOP-LI9N517C MINGW64 ~/Desktop/CodePy/Checkpoint-4 (main)

2. Escribimos: git init (para inicializar un repositorio en git)
3. Escribimos: git add . (esto añade TODOS los archivos del fichero seleccionado sobre la que estamos trabajando)
4. Escribimos: git status (mostrará los archivos en esta carpeta)
5. Escribimos: git commit -m "título del fichero o nombre que queremos asignar entre comillas" (p. ejemplo "flexbox_assignment"
6. Abrimos Git Hub y nos logueamos. Añadimos un nuevo repositorio con un título disponible y lo hacemos público.
7. Denttro del repositorio buscamos el apartado: <<push an existing repository from the command line>>
8. Copiamos el código con el botón que aparece dentro de esta opción en el terminal de Git Bash
9. Si no aparecen errores entonces el fichero ha sido subido correctamente. Podemos comprobarlo en el repositorio de Git Hub. 

¿Cómo ACTUALIZAR/UPDATE un fichero de trabajo con sus archivos una vez modificados?

1. Seguir el paso 1 del punto anterior (Git Bash o Visual Studio Code)
2. Escribimos: ls (para mostrar los archivos dentro del fichero de trabajo.
3. Escribimos: git status (mostrará los archivos en este fichero que están pendientes de actualizar)
4. Escribimos: git add . (para incluir TODAS las actualizaciones de los archivos dentro del fichero de trabajo)
5. Escribimos: git commit -m "nombre del fichero en Git Hub que vamos a actualizar"
6. Escribimos: git push
7. Si no aparecen errores entonces el fichero ha sido subido correctamente. Podemos comprobarlo en el repositorio de Git Hub. 


   